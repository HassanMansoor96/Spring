package com.stacksimplify.restservices.services;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.stacksimplify.restservices.entities.User;
import com.stacksimplify.restservices.exceptions.UserNotFoundException;
import com.stacksimplify.restservices.respitorories.UserRepository;

//Service
@Service
public class UserService {

	// Autowire the UserRepository
	@Autowired
	private UserRepository userRepository;
	
	//getAllUsers Method
	public List<User> getAllUsers() {
		
		return userRepository.findAll();
		
	}
	
	//CreateUser Method
	public User createUser(User user) {
		return userRepository.save(user);
	}
	
	//getUserById
	public Optional<User> getUserById(Long id) throws UserNotFoundException {
		Optional<User> user = userRepository.findById(id);
		
		if(!user.isPresent()) {
			throw new UserNotFoundException("User Not Found in user Repository");
		}
		
		return user;
	}
	
	
	//updateUserById
	
	public User updateUserById(Long id, User user) throws UserNotFoundException {
		Optional<User> optionaluser = userRepository.findById(id);
		
		if(!optionaluser.isPresent()) {
			throw new UserNotFoundException("User Not Found in user Repository, provide the correct user id");
		}
		
		user.setId(id);
		return userRepository.save(user);
	}
	
	
	
	//deleteUserById
	public void deleteUserById(Long id) {
		if(userRepository.findById(id).isPresent()) {
			userRepository.deleteById(id);
		}
	}
	
	
	//GetUserByUsername
	
	public User getUserByUsername(String username) {
		return userRepository.findByUsername(username);
	}
	
	
}




















